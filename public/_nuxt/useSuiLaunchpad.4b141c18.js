import{a1 as I,_ as i,S as h,j as N,a as E,u as B,a2 as M,a3 as v,a4 as f}from"./pool.b9076f31.js";import{$ as W,m as y,L as w}from"./entry.e9343920.js";function ee(n){const u={gasConfig:new I(1.1),fullRpcUrl:localStorage.getItem(`${n}-currentRpc`)||i[n||"Sui"].fullRpcUrl,faucetURL:localStorage.getItem(`${n}-currentRpc`)||i[n||"Sui"].faucetURL,faucet_router:i[n||"Sui"].faucet_router,simulationAccount:i[n||"Sui"].simulationAccount,token:i[n||"Sui"].token,clmm:i[n||"Sui"].clmm,launchpad:i[n||"Sui"].launchpad,xwhale:i[n||"Sui"].xwhale};console.log("defaultNetworkOptions####",u);const s=W(new h(u)),k=N(),l=y(()=>k);w(()=>{l.value.address&&(s.senderAddress=l.value.address,s.gasConfig=u.gasConfig,console.log(s.senderAddress,"sdk.senderAddress"))});const d=e=>({transactionBlock:e,options:{showEffects:!0,showEvents:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0,showBalanceChanges:!0}}),P=E();y(()=>P);const L=B();y(()=>L),w(()=>{l.value.address&&(s.senderAddress=l.value.address)});const C=async e=>{e.setSenderIfNotSet(l.value.address);const t=await e.build({provider:s._fullClient});return await s.fullClient.dryRunTransactionBlock({transactionBlock:t})},S=async()=>await s.Launchpad.getPools([]),A=async e=>await s.Launchpad.getPool(e),T=async(e,t)=>{const o=await s.Launchpad.getOwnerLaunchpadCoins(t,s.Launchpad.buildLaunchpadCoinType(e.coin_type_sale,e.coin_type_raise));return v.calculateTotalBalance(o).toString()},x=async(e,t)=>{const o=t||await s.Launchpad.getPools(),a=[],r=await s.Launchpad.getPurchaseMarks(e);return console.log("purchaseMarks ",r),o.forEach(_=>{for(const p of r)if(p.pool_id===_.pool_address){a.push(_);break}}),a},b=async(e,t)=>{const o=t||await s.Launchpad.getPools(),a=[];return o.forEach(r=>{r.recipient===e&&a.push(r)}),a},R=async e=>{const t=new h(u);t.senderAddress=l.value.address,t.gasConfig=u.gasConfig;const o=await t.Launchpad.creatPurchasePayload({pool_address:e.pool.pool_address,purchase_amount:e.amount,coin_type_sale:e.pool.coin_type_sale,coin_type_raise:e.pool.coin_type_raise});return o.setGasBudget(2e7),d(o)},U=async e=>{const t=await s.Launchpad.creatClaimPayload({pool_address:e.pool.pool_address,coin_type_sale:e.pool.coin_type_sale,coin_type_raise:e.pool.coin_type_raise});return d(t)},m=async e=>{if(console.log("pool: ",e),e.pool_status!=="Settle")throw new Error("The pool is not in settle ");let t=null,o=!1;const a=await s.Resources.getPoolImmutables();for(const c of a){if(c.coinTypeA===e.coin_type_sale&&c.coinTypeB===e.coin_type_raise&&Number(c.tickSpacing)===e.tick_spacing){t=await s.Resources.getPool(c.poolAddress),console.log("clmmPool: ",t);break}if(c.coinTypeA===e.coin_type_raise&&c.coinTypeB===e.coin_type_sale&&Number(c.tickSpacing)===e.tick_spacing){t=await s.Resources.getPool(c.poolAddress),o=!0,console.log("clmmPool: ",t);break}}const r=await s.Token.getTokenListByCoinTypes([e.coin_type_raise,e.coin_type_sale]),_=r[e.coin_type_sale].decimals,p=r[e.coin_type_raise].decimals;let g;if(e.liquidity_rate>0&&t===null)throw new Error("not found clmmPool ");if(t&&e.liquidity_rate>0){console.log(JSON.stringify({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,clmm_args:{current_price:e.current_price,clmm_pool_address:t.poolAddress,clmm_sqrt_price:t.current_sqrt_price.toString(),opposite:o,sale_decimals:_,raise_decimals:p}}),"txtxtxtxtxt2222");try{g=await s.Launchpad.creatSettlePayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise,clmm_args:{current_price:e.current_price,clmm_pool_address:t.poolAddress,clmm_sqrt_price:t.current_sqrt_price.toString(),opposite:o,sale_decimals:_,raise_decimals:p}})}catch(c){console.log(c,"e===>")}}else g=await s.Launchpad.creatSettlePayload({pool_address:e.pool_address,coin_type_sale:e.coin_type_sale,coin_type_raise:e.coin_type_raise});return console.log(g,"txtxtx25211"),g};return{getPoolConfigs:async()=>{const e=await s.Launchpad.getPoolConfigs(!0);return console.log(e,"==>poolConfigs"),e},getLockNFTList:async e=>{if(e.pool_status=="Ended"){const t=await s.Launchpad.getLockNFTList(e.pool_type,e.recipient);return console.log("getLockNFTList: ",t),t}},beforeSettle:m,simulate:C,TickUtil:M,getCmmPoolAddress:async e=>{let t=null;const o=await s.Resources.getPoolImmutables();console.log(o,"===>clmmImmutables");for(const a of o){if(a.coinTypeA===e.coin_type_sale&&a.coinTypeB===e.coin_type_raise&&Number(a.tickSpacing)==Number(e.tick_spacing)){t=await s.Resources.getPool(a.poolAddress),console.log("clmmPool: ",t);break}if(a.coinTypeA===e.coin_type_raise&&a.coinTypeB===e.coin_type_sale&&Number(a.tickSpacing)==Number(e.tick_spacing)){t=await s.Resources.getPool(a.poolAddress),console.log("clmmPool: ",t);break}}return t||null},getMyCommittedCoinAsset:T,getLaunchpadAllPools:S,getLaunchpadPoolInfo:A,getJoinPools:x,getOwnerPools:b,getCreatPurchasePayload:R,getCreatClaimPayload:U,getCreatSettlePayload:async e=>{const t=await m(e);return console.log(t,"txtxtxtxtxtxtx111"),d(t)},getCreatWithdrawParams:async e=>{const t=s.Launchpad.creatWithdrawPayload({pool_address:e.pool.pool_address,coin_type_sale:e.pool.coin_type_sale,coin_type_raise:e.pool.coin_type_raise,sale_amount:e.sale_amount,raise_amount:e.raise_amount});return d(t)},getIsWhiteListUser:async(e,t)=>{var a;return await s.Launchpad.isWhiteListUser((a=e.white_summary)==null?void 0:a.white_handle,t)},getCreatUnlockNftPayload:async(e,t)=>{if(e.pool_status=="Ended"){if(t){const o=s.Launchpad.creatUnlockNftPayload({lock_nft:t.lock_nft_id,nft_type:t.nft_type});return d(o)}}else throw new Error("The pool is not in Ended  ")},getLockNFT:async e=>{if(e.pool_status=="Ended"){const t=await s.Launchpad.getLockNFTEvent(e.pool_type,e.tick_spacing,e.recipient);if(console.log("lockNftEvent: ",t),t){const o=await s.Launchpad.getLockNFT(t.lock_nft_id);return console.log("lockNft: ",o),{lockNftEvent:t,lockNftInfo:o}}}return null},getIsAdminCap:async e=>await s.Launchpad.isAdminCap(e),getPurchaseMark:async(e,t)=>{console.log("purchaseMark,address",e,[t]);const o=await s.Launchpad.getPurchaseMarks(e,[t]);return console.log("purchaseMark",o),o},getPurchaseAmountVal:async(e,t)=>await s.Launchpad.getPurchaseAmount(t.white_summary.white_handle,e),getUnusedRaiseAmount:async e=>await f.getHistoryWithdrawRaise(s,e),getUnusedSaleAmount:async e=>await f.getHistoryWithdrawSale(s,e),getCoinInfo:async(e,t)=>{const o=await s.Token.getTokenListByCoinTypes([e,t]);return console.log(o,"==>tokenMap"),o}}}export{ee as u};
